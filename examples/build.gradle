import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'java'

description = 'Ballerina - Pipe Examples Test'

def ballerinaDist = "${project.rootDir}/target/ballerina-runtime"
def examples = ["covid_report"]

dependencies {
    implementation group: 'org.ballerinalang', name: 'ballerina-lang', version: "${ballerinaLangVersion}"
}

clean {
    examples.forEach { example ->
        delete "${projectDir}/${example}/target"
    }
}

task testExamples {
    doLast {
        examples.each { example ->
            try {
                exec {
                    workingDir project.projectDir
                    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
                        commandLine 'cmd', '/c', "bal test --offline ${example} && exit %%ERRORLEVEL%%"
                    } else {
                        commandLine 'sh', '-c', "bal test --offline ${example}"
                    }
                }
            } catch (Exception e) {
                println("Example '${example}' Build failed: " + e.message)
                throw e
            }
        }
    }
}

task buildExamples {
    gradle.taskGraph.whenReady { graph ->
        if (graph.hasTask(":pipe-examples:test")) {
            buildExamples.enabled = false
        } else {
            testExamples.enabled = false
        }
    }
    doLast {
        examples.each { example ->
            try {
                exec {
                    workingDir project.projectDir
                    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
                        commandLine 'cmd', '/c', "bal build --offline ${example} && exit %%ERRORLEVEL%%"
                    } else {
                        commandLine 'sh', '-c', "bal build --offline ${example}"
                    }
                }
            } catch (Exception e) {
                println("Example '${example}' Build failed: " + e.message)
                throw e
            }
        }
    }
}

buildExamples.dependsOn ":pipe-ballerina:build"
testExamples.dependsOn ":pipe-ballerina:build"
test.dependsOn testExamples
build.dependsOn buildExamples
